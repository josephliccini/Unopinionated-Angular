import { Component, Input, Output, EventEmitter, HostBinding } from '@angular/core';

@Component({
    moduleId: module.id,
    selector: 'button[sort]',
    template: `{{text}}`,
    host: {
        '(click)': "onChangeSortMethod()",
        '[attr.btnRadio]': "btnRadioValue",
        '[class.glyphicon-arrow-up]': "sortBy == SortMethod.UP",
        '[class.glyphicon-arrow-down]': "sortBy == SortMethod.DOWN",
        '[class.active]' : "sortBy != SortMethod.NONE" 
    }
})
export class MySortButtonComponent {
    @Input() text = '';
    @Input() btnRadioValue: 'Left' | 'Right';
    @Input() sortBy: SortMethodType = SortMethodType.NONE;

    @Output() onSortMethodChange = new EventEmitter<SortMethodType>();

    SortMethod = SortMethodType;

    constructor() { }

    onChangeSortMethod() {
        switch (this.sortBy) {
            case SortMethodType.NONE: {
                this.sortBy = SortMethodType.UP;
                break;
            }
            case SortMethodType.UP: {
                this.sortBy = SortMethodType.DOWN;
                break;
            }
            case SortMethodType.DOWN: {
                this.sortBy = SortMethodType.NONE;
                break;
            }
        }
        this.onSortMethodChange.emit(this.sortBy);
    }
}

@Component({
    moduleId: module.id,
    selector: 'my-sort-buttons',
    template: `
    <div class="btn-group">
        <button sort
                class="btn btn-default glyphicon"
                text="Abc"
                btnRadioValue="Left"
                [sortBy]="SortMethod.NONE"
                (onSortMethodChange)="onAbcChange($event)">
        </button>
        <button sort
                class="btn btn-default glyphicon"
                text="Date"
                btnRadioValue="Right"
                [sortBy]="SortMethod.NONE"
                (onSortMethodChange)="onDateChange($event)">
        </button>
    </div>`
})
export class MySortButtonsComponent {
    SortMethod = SortMethodType;

    constructor() { }

    onAbcChange(sortMethod: SortMethodType) {
        console.log('abc sort method changed: ' + sortMethod.toString());
    }

    onDateChange(sortMethod: SortMethodType) {
        console.log('date sort method changed: ' + sortMethod.toString());
    }
}

export enum SortMethodType {
    NONE,
    UP,
    DOWN    
}